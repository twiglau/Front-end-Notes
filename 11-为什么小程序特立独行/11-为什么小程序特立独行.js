/**
 * 前端开发者带着固有认知进行小程序开发的时,发现很多地方都行不通,比如页面元素无法获取,只能通过
 * setData更新页面,还有各种浏览器接口都无法正常使用. 所以,很多人都难以理解,认为小程序偏偏特立独行
 * 为难开发者,其实很大程度上是 因为小程序基于安全和管控考虑下的设计.
 * 
 * 那么,究竟是处于怎样的考虑,小程序才被设计成这样?到底又做了怎样事,来尝试解决以上问题?
 */

/**
 * 一, 小程序在思考什么
 * 在微信app里,小程序直接开放给所有用户使用,意味着可能有十几亿人会用到这个工具. 面对如此大的流量入口,
 * 吸引了很多有心人眼球.
 * 
 * 当年互联网还不成熟的时候,许多网页开发没有做好XSS和CSRF这样的漏洞保护,导致出现用户账户被盗用,财产被转移
 * 等问题. 对于小程序来说,不仅需要对各种小程序进行内容的管控,同样需要给用户和开发者提供有安全保障的环境.
 */

/**
 * 二, 小程序如何保障用户安全
 * 我们知道,在Web开发中,开发者可以使用JavaScript脚本来操作DOM,这意味着恶意攻击者同样可以通过注入JavaScript
 * 脚本的方式来操控用户的页面. 前面提到的XSS攻击便是利用了这样的漏洞,从而危害用户的网站的安全.
 * 
 * 除此之外,有些恶意的开发者也可能想要从小程序中盗取用户信息. 比如, 小程序提供了<open-data>组件,用于无须授权的
 * 情况下可展示用户的敏感信息(昵称,头像,性别,地理位置等),如果开发者直接通过DOM API获取到这些信息,意味着只要用户
 * 打开了这个小程序,在未授权情况下自己的相关信息就会被盗取.
 * 
 * 对于微信来说,这些都是分厂危险又不可控的问题,如果可以从平台的角度解决,就可以保障用户和商户小程序的安全. 在此基础上,
 * 小程序提出了 双线程设计.
 * 
 * 在介绍小程序的 双线程设计之前,先来思考下上面安全问题怎么避免?
 * 
 * 
 */